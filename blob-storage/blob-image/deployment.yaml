apiVersion: apps/v1
kind: Deployment
metadata:
  name: blob-image
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blob-image
  template:
    metadata:
      labels:
        app: blob-image
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: blob-image
        image: #TODO: Create blob image and upload to DockerHub
        ports:
        - containerPort: 8080
        env:
        - name: USE_SQL
          value: "true"
        - name: USE_AZURE_BLOB_STORAGE
          value: "false"
        # - name: KUBERNETES_CLUSTER_DNS
        #   value: #TODO: Get DNS from Azure cluster
        resources:
          requests:
            cpu: 1m
            memory: 50Mi
          limits:
            cpu: 75m
            memory: 128Mi
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          failureThreshold: 5
          initialDelaySeconds: 20
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          failureThreshold: 5
          initialDelaySeconds: 3
          periodSeconds: 3
      initContainers:
      - name: wait-for-postgres
        image: busybox
        command: ['sh', '-c', 'until nc -zv postgres-image 8080; do echo waiting for postgres-image; sleep 2; done;']
        resources:
          requests:
            cpu: 1m
            memory: 50Mi
          limits:
            cpu: 75m
            memory: 128Mi    